;This procedure reads in a file of the type generated by get_halos.pl
;(halo #, Mvir, Rvir, x,y,z)

;It then reads in the cosmological tipsy simulation and writes out a tipsy file for
;each halo and a list of all halo files

;div_halos,'h1201-h1755-X2X2g1bwK.00512','../clean.dat',sim_pwd ='../Fabio_Runs/h1201-h1755-X2X2g1bwK/',out_pwd = '../'

PRO div_halos, sim, list, sim_pwd = sim_pwd, out_pwd = out_pwd
;sim: Name of the simulation (without .std)
;list: filename containing the list of halos
;sim_pwd: path of simulation
;out_pwd: path for output

IF (keyword_set(sim_pwd)) THEN simfile = sim_pwd + sim  ELSE simfile = sim
rtipsy, simfile, h, g, d, s

readcol, list, format = 'I3,F3,F3,F3,F3,F3',id,mvir,rvir,xc,yc,zc
n_halo = N_ELEMENTS(id)
close,2
openw,2,'halo_list.dat'


set_plot,'x'
loadct,39

FOR ct = 0, n_halo DO BEGIN
    print,'Halo: ',id[ct]
 ;   plot,xc,yc,psym=3
;The weirdness in the distance formula is to convert between tipsy
;units (s, d, and g 50000 = 1kpc) and amiga, ordinate-at-corner units
;(xc, yc and zy: 1 = 100kpc and rvir: 1 = 1kpc)
    ind_s = WHERE((s.x*50.0 - xc[ct] + 25.0)^2 + (s.y*50.0 - yc[ct] + 25.0)^2 + (s.z*50.0 - zc[ct] + 25.0)^2 lt (rvir[ct]/100.0)^2) 
    ind_g = WHERE((g.x*50.0 - xc[ct] + 25.0)^2 + (g.y*50.0 - yc[ct] + 25.0)^2 + (g.z*50.0 - zc[ct] + 25.0)^2 lt (rvir[ct]/100.0)^2) 
    ind_d = WHERE((d.x*50.0 - xc[ct] + 25.0)^2 + (d.y*50.0 - yc[ct] + 25.0)^2 + (d.z*50.0 - zc[ct] + 25.0)^2 lt (rvir[ct]/100.0)^2) 
    halonum = strtrim(string(id[ct]),2)    
    IF (keyword_set(out_pwd)) THEN outfile = out_pwd + sim + '_' + halonum + '.std' ELSE  outfile = sim + '_' + halonum + '.std'
    plot,xc,yc,psym=3
    oplot,s[ind_s].x*50.0 + 25,s[ind_s].y*50.0 + 25, psym = 3,color=220
    h[0].ngas = N_ELEMENTS(ind_g)
    h[0].ndark = N_ELEMENTS(ind_d)
    h[0].nstar = N_ELEMENTS(ind_s)
    wtipsy,outfile,h,g[ind_g],d[ind_d],s[ind_s]
    printf,2,outfile
ENDFOR
close,2

END
